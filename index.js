'use strict';

var restrictedGlobals = require('confusing-browser-globals');

module.exports = {
    root: true,
    env: {
        browser: true,
        es6: true,
        jest: true,
        node: true,
    },
    extends: ['plugin:jest/recommended', 'prettier'],
    globals: {
        __DEVELOPMENT__: true,
        __DISABLE_SSR__: true,
        webpackIsomorphicTools: true,
        JSX: true,
        google: true,
    },
    parser: '@typescript-eslint/parser',
    parserOptions: {
        ecmaVersion: 2018,
        sourceType: 'module',
        ecmaFeatures: {
            jsx: true,
        },
    },
    plugins: [
        'import',
        'jest',
        'jest-dom',
        'jest-formatting',
        'jsx-a11y',
        'react',
        'react-hooks',
        'sort-destructure-keys',
        'sort-keys',
        'sort-imports-es6-autofix',
        'testing-library',
        '@typescript-eslint',
        'typescript-sort-keys',
        '@liveauctioneers/la-react',
    ],
    rules: {
        'array-callback-return': ['error'],
        'arrow-body-style': ['off'],
        'arrow-parens': ['off'],
        'comma-dangle': [
            'error',
            {
                arrays: 'always-multiline',
                exports: 'always-multiline',
                functions: 'never',
                imports: 'always-multiline',
                objects: 'always-multiline',
            },
        ],
        'consistent-return': ['off'],
        curly: ['error', 'all'],
        'default-case': ['error'],
        'dot-location': ['error', 'property'],
        eqeqeq: ['error', 'smart'],
        'getter-return': ['error'],
        'global-require': ['off'],
        indent: ['off'],
        'linebreak-style': ['off'],
        'max-len': [
            'error',
            120,
            {
                ignoreComments: true,
                ignoreRegExpLiterals: true,
                ignoreStrings: true,
                ignoreTemplateLiterals: true,
                ignoreTrailingComments: true,
                ignoreUrls: true,
            },
        ],
        'new-parens': ['error'],
        'no-array-constructor': ['error'],
        'no-caller': ['error'],
        'no-case-declarations': ['off'],
        'no-cond-assign': ['error', 'except-parens'],
        'no-console': ['off'],
        'no-const-assign': ['error'],
        'no-control-regex': ['error'],
        'no-delete-var': ['error'],
        'no-dupe-args': ['error'],
        'no-dupe-class-members': ['error'],
        'no-dupe-keys': ['error'],
        'no-duplicate-case': ['error'],
        'no-duplicate-imports': ['error'],
        'no-empty-character-class': ['error'],
        'no-empty-pattern': ['error'],
        'no-eval': ['error'],
        'no-ex-assign': ['error'],
        'no-extend-native': ['error'],
        'no-extra-bind': ['error'],
        'no-extra-boolean-cast': ['off'],
        'no-extra-label': ['error'],
        'no-fallthrough': ['error'],
        'no-func-assign': ['error'],
        'no-implied-eval': ['error'],
        'no-invalid-regexp': ['error'],
        'no-iterator': ['error'],
        'no-label-var': ['error'],
        'no-labels': ['error', { allowLoop: true, allowSwitch: false }],
        'no-lone-blocks': ['error'],
        'no-loop-func': ['error'],
        'no-mixed-operators': [
            'off',
            {
                groups: [
                    ['&', '|', '^', '~', '<<', '>>', '>>>'],
                    ['==', '!=', '===', '!==', '>', '>=', '<', '<='],
                    ['&&', '||'],
                    ['in', 'instanceof'],
                ],
                allowSamePrecedence: false,
            },
        ],
        'no-multi-str': ['error'],
        'no-multiple-empty-lines': ['error', { max: 1 }],
        'no-native-reassign': ['error'],
        'no-negated-in-lhs': ['error'],
        'no-new-func': ['error'],
        'no-new-object': ['error'],
        'no-new-symbol': ['error'],
        'no-new-wrappers': ['error'],
        'no-obj-calls': ['error'],
        'no-octal': ['error'],
        'no-octal-escape': ['error'],
        'no-param-reassign': ['off'],
        'no-redeclare': ['error'],
        'no-regex-spaces': ['error'],
        'no-script-url': ['error'],
        'no-self-assign': ['error'],
        'no-self-compare': ['error'],
        'no-sequences': ['error'],
        'no-shadow-restricted-names': ['error'],
        'no-sparse-arrays': ['error'],
        'no-template-curly-in-string': ['error'],
        'no-this-before-super': ['error'],
        'no-throw-literal': ['error'],
        'no-undef': ['error'],
        'no-restricted-globals': ['error'].concat(restrictedGlobals),
        'no-restricted-syntax': ['off'],
        'no-return-assign': ['off'],
        'no-underscore-dangle': ['off'],
        'no-unexpected-multiline': ['error'],
        'no-unreachable': ['error'],
        'no-unused-expressions': [
            'off',
            {
                allowShortCircuit: true,
                allowTernary: true,
                allowTaggedTemplates: true,
            },
        ],
        'no-unused-labels': ['error'],
        'no-use-before-define': 'off',
        'no-useless-computed-key': ['error'],
        'no-useless-concat': ['error'],
        'no-useless-constructor': ['error'],
        'no-useless-escape': ['error'],
        'no-useless-rename': [
            'error',
            {
                ignoreDestructuring: false,
                ignoreImport: false,
                ignoreExport: false,
            },
        ],
        'no-with': ['error'],
        'no-whitespace-before-property': ['error'],
        'operator-assignment': ['off'],
        quotes: ['error', 'single', { avoidEscape: true }],
        'require-yield': ['error'],
        'rest-spread-spacing': ['error', 'never'],
        semi: ['error'],
        'sort-destructure-keys/sort-destructure-keys': ['error', { caseSensitive: false }],
        'sort-imports-es6-autofix/sort-imports-es6': [
            'error',
            {
                ignoreCase: true,
                ignoreMemberSort: false,
                memberSyntaxSortOrder: ['all', 'multiple', 'single', 'none'],
            },
        ],
        'sort-keys/sort-keys-fix': ['error', 'asc', { caseSensitive: false }],
        'sort-vars': [
            'error',
            {
                ignoreCase: true,
            },
        ],
        strict: ['error', 'never'],
        'unicode-bom': ['error', 'never'],
        'use-isnan': ['error'],
        'valid-typeof': ['error'],

        'import/no-amd': ['error'],
        'import/no-extraneous-dependencies': ['error'],
        'import/no-webpack-loader-syntax': ['error'],

        'jest/no-identical-title': ['off'],
        'jest/prefer-to-have-length': ['error'],
        'jest/no-commented-out-tests': ['off'],

        'jsx-a11y/accessible-emoji': ['error'],
        'jsx-a11y/alt-text': ['off'],
        'jsx-a11y/anchor-has-content': ['off'],
        'jsx-a11y/anchor-is-valid': ['off'],
        'jsx-a11y/aria-activedescendant-has-tabindex': ['error'],
        'jsx-a11y/aria-props': ['error'],
        'jsx-a11y/aria-proptypes': ['error'],
        'jsx-a11y/aria-role': ['error'],
        'jsx-a11y/aria-unsupported-elements': ['error'],
        'jsx-a11y/heading-has-content': ['error'],
        'jsx-a11y/iframe-has-title': ['off'],
        'jsx-a11y/img-redundant-alt': ['error'],
        'jsx-a11y/no-access-key': ['error'],
        'jsx-a11y/no-distracting-elements': ['error'],
        'jsx-a11y/no-redundant-roles': ['error'],
        'jsx-a11y/role-has-required-aria-props': ['error'],
        'jsx-a11y/role-supports-aria-props': ['off'],
        'jsx-a11y/scope': ['error'],

        'react/boolean-prop-naming': ['error'],
        'react/button-has-type': ['off'],
        'react/default-props-match-prop-types': ['error', { allowRequiredDefaults: true }],
        'react/destructuring-assignment': ['off'],
        'react/display-name': ['off'],
        'react/forbid-component-props': ['off'],
        'react/forbid-dom-props': ['off'],
        'react/forbid-elements': ['off'],
        'react/forbid-foreign-prop-types': ['off'],
        'react/forbid-prop-types': ['off'],
        'react/jsx-boolean-value': ['error'],
        'react/jsx-child-element-spacing': ['off'],
        'react/jsx-closing-bracket-location': ['error'],
        'react/jsx-closing-tag-location': ['error'],
        'react/jsx-curly-brace-presence': ['error'],
        'react/jsx-curly-spacing': ['error'],
        'react/jsx-equals-spacing': ['error'],
        'react/jsx-filename-extension': ['off'],
        'react/jsx-indent': ['off'],
        'react/jsx-indent-props': ['off'],
        'react/jsx-no-comment-textnodes': ['error'],
        'react/jsx-no-duplicate-props': ['error', { ignoreCase: true }],
        'react/jsx-no-target-blank': ['off'],
        'react/jsx-no-undef': ['error'],
        'react/jsx-uses-react': ['error'],
        'react/jsx-uses-vars': ['error'],
        'react/no-array-index-key': ['off'],
        'react/no-danger': ['off'],
        'react/no-danger-with-children': ['error'],
        'react/no-deprecated': ['off'],
        'react/no-direct-mutation-state': ['error'],
        'react/no-is-mounted': ['error'],
        'react/no-redundant-should-component-update': ['off'],
        'react/no-unused-prop-types': ['off'],
        'react/prefer-stateless-function': [
            'off',
            {
                ignorePureComponents: true,
            },
        ],
        'react/react-in-jsx-scope': 'off',
        'react/require-default-props': ['off'],
        'react/require-render-return': ['error'],
        'react/sort-comp': ['error'],
        'react/style-prop-object': ['off'],
        'react-hooks/exhaustive-deps': ['error'],
        'react-hooks/rules-of-hooks': ['error'],

        // Jest rules
        'jest-formatting/padding-around-after-all-blocks': 2,
        'jest-formatting/padding-around-after-each-blocks': 2,
        'jest-formatting/padding-around-before-all-blocks': 2,
        'jest-formatting/padding-around-before-each-blocks': 2,
        'jest-formatting/padding-around-describe-blocks': 2,
        'jest-formatting/padding-around-test-blocks': 2,

        // Typescript rules
        'no-implicit-coercion': 'error',
        'typescript-sort-keys/string-enum': ['error', 'asc', { natural: true }],
        'typescript-sort-keys/interface': ['error', 'asc', { natural: true }],
        // let @typescript-eslint handle no-unused-vars rule
        'no-unused-vars': 'off',
        '@typescript-eslint/no-unused-vars': ['error'],

        'react/jsx-sort-props': ['error', { ignoreCase: true }],
        'react/jsx-pascal-case': 'off',

        '@liveauctioneers/la-react/dispatch-invoke': ['error'],
    },
    settings: {
        'import/resolver': {
            node: true,
            'eslint-import-resolver-typescript': true,
        },
        react: {
            version: 'detect',
        },
    },
    overrides: [
        {
            // enable eslint-plugin-testing-library rules only for spec files
            extends: ['plugin:testing-library/react'],
            files: ['**/*.spec.@(t|j)s@(x|)'],
            rules: {
                'prefer-const': 0,
                'testing-library/render-result-naming-convention': 'off',
            },
        },
    ],
};